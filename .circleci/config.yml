version: 2.1
executors:
  executor-gdal:
    docker:
      - image: quay.io/azavea/openjdk-gdal:2.4-jdk8-slim
        environment:
          _JAVA_OPTIONS: "-Xms128m -Xmx1536m"

  executor-s3:
    docker:
      - image: quay.io/azavea/openjdk-gdal:2.4-jdk8-slim
        environment:
          _JAVA_OPTIONS: "-Xms128m -Xmx1536m"
      - image: minio/minio:RELEASE.2019-05-02T19-07-09Z
        environment:
          _JAVA_OPTIONS: "-Xms1m -Xmx512m"
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: password
        command: server --address :9091 /data

  executor-cassandra:
    docker:
      - image: quay.io/azavea/openjdk-gdal:2.4-jdk8-slim
        environment:
          _JAVA_OPTIONS: "-Xms128m -Xmx1536m"
      - image: cassandra:latest
        environment:
          _JAVA_OPTIONS: "-Xms1m -Xmx512m"
          MAX_HEAP_SIZE: 512m
          HEAP_NEWSIZE: 1m
          CASSANDRA_LISTEN_ADDRESS: 127.0.0.1

  executor-hbase:
    docker:
      - image: quay.io/azavea/openjdk-gdal:2.4-jdk8-slim
        environment:
          _JAVA_OPTIONS: "-Xms128m -Xmx1536m"
      - image: daunnc/hbase:latest
        environment:
          _JAVA_OPTIONS: "-Xms1m -Xmx512m"
          HBASE_DOCKER_HOSTNAME: localhost

jobs:
  java:
    parameters:
      scala-version:
        type: string
      test-set:
        type: string
    executor: executor-gdal
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test
          no-output-timeout: 30m
          command: |
            # docker run -d --restart=always -p 8081:80 -v $(pwd)/spark/src/test/resources:/usr/share/nginx/html:ro nginx:stable
            export SCALA_VERSION=<< parameters.scala-version >>
            export RUN_SET=<< parameters.test-set >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            .circleci/build-and-test.sh
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

  cassandra:
    parameters:
      scala-version:
        type: string
    executor: executor-cassandra
    steps:
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test Cassandra
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" \
            "project cassandra" test \
            "project cassandra-spark" test
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

  s3:
    parameters:
      scala-version:
        type: string
    executor: executor-s3
    steps:
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test S3
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" \
            "project s3" test \
            "project s3-spark" test
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

  hbase:
    parameters:
      scala-version:
        type: string
    executor: executor-hbase
    steps:
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test HBase
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" \
            "project hbase" test \
            "project hbase-spark" test
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

  gdal-spark:
    parameters:
      scala-version:
        type: string
    executor: executor-gdal
    steps:
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test GDAL Spark
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" \
            "project gdal-spark" test
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

workflows:
  test-publish:
    jobs:
      - java:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
              test-set: ["1", "3"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      - cassandra:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      - s3:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      - hbase:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      #- gdal-spark:
      #    matrix:
      #      parameters:
      #        scala-version: ["2.11.12", "2.12.10"]
      #    filters:
      #      branches:
      #        only: /.*/
      #      tags:
      #        only: /^v.*/
