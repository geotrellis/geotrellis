version: 2.1
executors:
  gdal-executor:
    docker:
      - image: quay.io/azavea/openjdk-gdal:2.4-jdk8-slim

  java-executor:
    docker:
      - image: circleci/openjdk:8u232-jdk

jobs:
  java:
    parameters:
      scala-version:
        type: string
      test-set:
        type: string
    executor: java-executor
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test
          command: |
            docker run -d --restart=always -p 8081:80 -v $(pwd)/spark/src/test/resources:/usr/share/nginx/html:ro nginx:stable
            export SCALA_VERSION=<< parameters.scala-version >>
            export RUN_SET=<< parameters.test-set >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            .circleci/build-and-test.sh
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

  cassandra:
    parameters:
      scala-version:
        type: string
    executor: java-executor
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test Cassnadra
          command: |
            docker run -d --restart=always --net=host -m 1G --memory-swap -1 --env="MAX_HEAP_SIZE=500M" --env="HEAP_NEWSIZE=100M" --env="CASSANDRA_LISTEN_ADDRESS=127.0.0.1" cassandra:latest
            export SCALA_VERSION=<< parameters.scala-version >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" \
            "project cassandra" test \
            "project cassandra-spark" test
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

  s3:
    parameters:
      scala-version:
        type: string
    executor: java-executor
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test S3
          command: |
            docker run -d --restart=always -p 9091:9000 -e MINIO_ACCESS_KEY=minio -e MINIO_SECRET_KEY=password minio/minio:RELEASE.2019-05-02T19-07-09Z server /data
            export SCALA_VERSION=<< parameters.scala-version >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" \
            "project s3" test \
            "project s3-spark" test
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

  hbase:
    parameters:
      scala-version:
        type: string
    executor: java-executor
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test HBase
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" \
            "project hbase" test:compile \
            "project hbase-spark" test:compile
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

  gdal:
    parameters:
      scala-version:
        type: string
    executor: gdal-executor
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: sbt-cache
      - run:
          name: Test GDAL
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            cd raster/data; unzip geotiff-test-files.zip; cd ~-
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" \
            "project gdal" test \
            "project gdal-spark" test
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.couriser/cache"
            - "~/.sbt"
            - "~/.m2"

workflows:
  test-publish:
    jobs:
      - java:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
              test-set: ["1", "2", "3"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      - cassandra:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      - s3:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      - hbase:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      - gdal:
          matrix:
            parameters:
              scala-version: ["2.11.12", "2.12.10"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
